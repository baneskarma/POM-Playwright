name: Playwright Tests

# run 2
on:
  workflow_dispatch: # Trigger the workflow manually

  schedule:
    - cron: "30 9 * * 0-4"

  push:
    branches: [blagoja, main]

  # pull_request:
  #   branches: [ blagoja, main ]

jobs:
  test:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    # needs: setup
    steps:
      # - name: Install Allure
      #   run: sudo apt-add-repository ppa:qameta/allure -y && sudo apt-get update -y && sudo apt-get install allure -y
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # - name: Install Dependencies
      #   run: |
      #     sudo apt-get install -y libgtk-3-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      # - name: Install XVFB
      #   run: sudo apt-get install xvfb -y

      # - name: Set DISPLAY variable
      #   run: export DISPLAY=:99

      # - name: Install Allure CLI
      #   run: npm install -g allure-commandline --save-dev

      - name: Run Playwright tests
        run: xvfb-run npx playwright test TestSuite.spec.js --project=chromium || true
        env:
            API: ${{ secrets.API }}
            BASE_URL: ${{ secrets.BASE_URL }}
            CLIENT_ID: ${{ secrets.CLIENT_ID }}
            CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
            REDIRECT_URI: ${{ secrets.REDIRECT_URI }}
            SF_URL: ${{ secrets.SF_URL }}
            COMMON_URL: ${{ secrets.COMMON_URL }}

            SF_USERNAME: ${{ secrets.SF_USERNAME }}
            SF_PASSWORD: ${{ secrets.SF_PASSWORD }}
            # KEY_PEM_PATH: ${{ secrets.KEY_PEM_PATH }}
            # CERT_PEM_PATH: ${{ secrets.CERT_PEM_PATH }}


      # - name: Upload Allure Results
      # uses: actions/upload-artifact@v4
      # if: always()
      # with:
      #   name: playwright-report
      #   path: allure-results/
      #   retention-days: 30

      #   uses: actions/upload-artifact@v4
      #   if: always()
      #   with:
      #     name: playwright-report
      #     path: allure-results/
      #     retention-days: 30

      # - name: Clean up gh-pages branch
      #   run: |
      #      git checkout -f gh-pages
      #      git rm -rf
      #     git checkout -f gh-pages
      #     git rm -rf

      # - name: Download Playwright report artifact
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: playwright-report
      #     path: allure-report/

      - name: Get Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Test marketplace action
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
        # env:
        #   PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #   PUBLISH_BRANCH: gh-pages
        #   PUBLISH_DIR: allure-history

      # - name: Open Allure Report
      #   run: allure open allure-report

  # allure-report:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 5
  #   needs: test
  #   continue-on-error: true
  #   steps:
  #     - name: Install Allure CLI
  #       run: npm install -g allure-commandline --save-dev

  #     - name: Download Playwright report artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: playwright-report
  #         path: allure-report/

  #     - name: Generate Allure Report
  #       run: allure generate allure-results --clean -o allure-report

  #     - name: Open Allure Report
  #       run: allure open allure-report
